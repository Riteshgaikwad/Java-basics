/*
1)Print Hollow Rectangle pattern

* * * * *     //line 1
*       *     //line 2         rows * cols = 4*5
*       *     //line 3
* * * * *     //line 4
c1 c2 c3 c4 c5

->Total lines(total rows)
    outer loop (1 to 4)
->Inner loop cols (1 to 5)
   if(row==1 || row==4 || cols==1 || cols==5){
   Print("*");
   }
   else{
   print(" ");
   }
*/

import java.util.Scanner;
public class basics {
 public static void HollowRectangle(int rows,int cols){
   for(int i=1;i<=rows;i++){
      for(int j=1;j<=cols;j++){
         if(i==1 || i==rows || j==1 || j==cols){
            System.out.print("*");
         }
         else{
            System.out.print(" ");
         }
      }
      System.out.println();
   }
 }
public static void main(String args[]){
       HollowRectangle(4, 5);
   }
}

/*
2)Inverted and rotated Half-Pyramid:-

   *   line 1
  **   line 2
 ***   line 3               first we will print the spaces anf find the similarities between the line no. and stars and then print the star
****   line 4

->outer loop from 1 to 4 (i)
->inner loop from 1 to 4-(i)
    print(" ");
  another loop 1 to (i)
    print("*");
  
*/

import java.util.Scanner;
public class basics {
 
 public static void inverted_rotated_half_pyramid(int num){
   for(int i=1;i<=num;i++){
      for(int j=1;j<=(num-i);j++){
         System.out.print(" ");
      }
      for(int j=1;j<=i;j++){
         System.out.print("*");
      }
      System.out.println();
   }
 }
public static void main(String args[]){
       inverted_rotated_half_pyramid(4);
   }
}

/*
3)Inverted half pyramid with number
1 2 3 4 5       line 1     1 to 5
1 2 3 4         line 2     1 to 4
1 2 3           line 3     1 to 3
1 2             line 4     1 to 2
1               line 5     1 to 1

->outer loop from 1 to n (i)
->inner loop from 1 to (n-i)+1 

*/

import java.util.Scanner;
public class basics {
 public static void Inverted_half_pyramid_with_number(int n){
   for(int i=1;i<=n;i++){
      for(int j=1;j<=(n-i)+1;j++){
         System.out.print(j+" ");
      }
      System.out.println();
   }
 }
public static void main(String args[]){
    Inverted_half_pyramid_with_number(5);
   }
}

/*
4)Floyd's triangle
1                   line 1
2 3                 line 2
4 5 6               line 3
7 8 9 10            line 4
11 12 13 14 15      line 5

->int counter=1;
->outer loop 1 to n (i)
->inner loop i to i 
    print(counter);
    counter++;
*/

import java.util.Scanner;
public class basics {
public static void floyds_triangle(int n){
   int counter=1;
   for(int i=1;i<=n;i++){
      for(int j=1;j<=i;j++){
         System.out.print(counter+" ");
         counter++;
      }
      System.out.println();
   }
}
public static void main(String args[]){
   floyds_triangle(5);
   }
}

/*
5)0-1 triangle
1             line 1
0 1           line 2
1 0 1         line 3
0 1 0 1       line 4
1 0 1 0 1     line 5

->outer loop 1 to n (i)
->inner loop 1 to i 
  if((i+j)%2==0)){print("1");}
  else{ print("0"); }
*/

import java.util.Scanner;
public class basics {
public static void zero_one_Triangle(int n){
   for(int i=1;i<=n;i++){
      for(int j=1;j<=i;j++){
         if((i+j)%2==0){
            System.out.print("1");
         }
         else{
            System.out.print("0");
         }
      }
      System.out.println();
   }
}
public static void main(String args[]){
   zero_one_Triangle(5);
   }
}
